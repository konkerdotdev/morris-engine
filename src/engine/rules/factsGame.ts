import * as P from '@konker.dev/effect-ts-prelude';

import { MorrisColor, MorrisPhase } from '../consts';
import type { MorrisGame } from '../game';

export const MorrisFactKeysGame = [
  'isFirstMove',
  'isSecondMove',
  'isTurnWhite',
  'isTurnBlack',
  'isPlacingPhase',
  'isMovingPhase',
  'isLaskerPhase',
  'isFlyingPhase',
  'isRemoveMode',
  'isMillMadeWhite',
  'isMillMadeBlack',
  'isMillMade',
  'isDrawPositionRepeatLimit',
  'isDrawNoMillsLimit',
  'isDraw',
  'isNoValidMoveWhite',
  'isNoValidMoveBlack',
  'isWinWhiteMillsMade',
  'isWinWhiteOpponentCount',
  'isWinWhiteOpponentNoValidMove',
  'isWinWhite',
  'isWinBlackMillsMade',
  'isWinBlackOpponentCount',
  'isWinBlackOpponentNoValidMove',
  'isWinBlack',
  'isWin',
  'isGameOver',
] as const;

export const MorrisFactsGame = P.Schema.ParseJson.pipe(
  P.Schema.compose(P.Schema.record(P.Schema.literal(...MorrisFactKeysGame), P.Schema.boolean))
);
export type MorrisFactsGame = P.Schema.Schema.To<typeof MorrisFactsGame>;

export const INITIAL_MORRIS_FACTS_GAME: MorrisFactsGame = {
  isFirstMove: false,
  isSecondMove: false,
  isTurnWhite: false,
  isTurnBlack: false,
  isPlacingPhase: false,
  isLaskerPhase: false,
  isMovingPhase: false,
  isFlyingPhase: false,
  isRemoveMode: false,
  isMillMadeWhite: false,
  isMillMadeBlack: false,
  isMillMade: false,
  isDrawPositionRepeatLimit: false,
  isDrawNoMillsLimit: false,
  isDraw: false,
  isNoValidMoveWhite: false,
  isNoValidMoveBlack: false,
  isWinWhiteMillsMade: false,
  isWinWhiteOpponentCount: false,
  isWinWhiteOpponentNoValidMove: false,
  isWinWhite: false,
  isWinBlackMillsMade: false,
  isWinBlackOpponentCount: false,
  isWinBlackOpponentNoValidMove: false,
  isWinBlack: false,
  isWin: false,
  isGameOver: false,
};

export const BOOTSTRAP_INITIAL_MORRIS_FACTS_GAME = (game: MorrisGame): MorrisFactsGame => ({
  isFirstMove: true,
  isSecondMove: false,
  isTurnWhite: game.gameState.startColor === MorrisColor.WHITE,
  isTurnBlack: game.gameState.startColor === MorrisColor.BLACK,
  isPlacingPhase: game.gameState.config.phases[0] === MorrisPhase.PLACING,
  isLaskerPhase: game.gameState.config.phases[0] === MorrisPhase.LASKER,
  isMovingPhase: false,
  isFlyingPhase: false,
  isRemoveMode: false,
  isMillMadeWhite: false,
  isMillMadeBlack: false,
  isMillMade: false,
  isDrawPositionRepeatLimit: false,
  isDrawNoMillsLimit: false,
  isDraw: false,
  isNoValidMoveWhite: false,
  isNoValidMoveBlack: false,
  isWinWhiteMillsMade: false,
  isWinWhiteOpponentCount: false,
  isWinWhiteOpponentNoValidMove: false,
  isWinWhite: false,
  isWinBlackMillsMade: false,
  isWinBlackOpponentCount: false,
  isWinBlackOpponentNoValidMove: false,
  isWinBlack: false,
  isWin: false,
  isGameOver: false,
});
